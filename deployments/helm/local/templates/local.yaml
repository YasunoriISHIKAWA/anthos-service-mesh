---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  labels:
    app: app
spec:
  type: NodePort
  ports:
    {{- range $key, $value := .Values.app.ports }}
    - name: {{ $key }}
      port: {{ $value.port }}
      targetPort: {{ $value.targetPort }}
      nodePort: {{ $value.nodePort }}
      protocol: {{ $value.protocol }}
  {{- end }}
  selector:
    app: app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  selector:
    matchLabels:
      app: app
  replicas: 1
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          workingDir: /app
          env:
            {{- range $key, $value := .Values.app.env }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          command:
            - sleep
            - infinity
          volumeMounts:
            - mountPath: /app
              name: src
          ports:
            {{- range .Values.app.ports }}
            - containerPort: {{ .port }}
            {{- end }}
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - |
                    apt-get update -y && \
                    apt-get install unzip -y
                    echo "export PATH=$PATH:{{ .Values.app.env.GOPATH }}/bin" >> /root/.bashrc
      volumes:
        - name: src
          hostPath:
            {{- $v := $.Files.Get "local-values.yaml" | fromYaml }}
            path: {{ $v.volumePath }}
            type: Directory
